name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_IMAGE: analyser
  DOCKERHUB_REPO: adishjain1107/analyser
  EC2_USER: ubuntu
  EC2_IP: 18.209.55.68
  REMOTE_DIR: /home/ubuntu/analyser
  COMPOSE_DIR: docker

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: docker/package-lock.json
        
    - name: Install dependencies
      run: |
        cd docker
        npm install
        
    - name: Lint Code
      run: |
        cd docker
        npm run lint || echo "Linting completed with warnings"
        echo "‚úÖ Code linting completed"
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PSW }}
        
    - name: Build Docker Image with Environment Variables
      run: |
        cd docker
        # Build with environment variables as build arguments
        docker build -f Dockerfile \
          --build-arg NEXT_PUBLIC_SUPABASE_URL="${{ secrets.SUPABASE_URL }}" \
          --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY="${{ secrets.SUPABASE_ANON_KEY }}" \
          -t ${{ env.DOCKERHUB_REPO }}:${{ github.run_number }} ..
        docker tag ${{ env.DOCKERHUB_REPO }}:${{ github.run_number }} ${{ env.DOCKERHUB_REPO }}:latest
        echo "üê≥ Docker image built with environment variables successfully"
        
    - name: Push to DockerHub
      run: |
        # Always push both tags
        echo "üì§ Pushing build-specific image..."
        docker push ${{ env.DOCKERHUB_REPO }}:${{ github.run_number }}
        
        echo "üì§ Pushing latest tag..."
        docker push ${{ env.DOCKERHUB_REPO }}:latest
        
        echo "üöÄ Images with environment variables pushed to DockerHub successfully"
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.EC2_IP }}
        username: ${{ env.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          set -e
          echo 'Starting deployment on EC2...'
          
          [ -d '${{ env.REMOTE_DIR }}' ] || git clone https://github.com/1107-adishjain/Analyser.git ${{ env.REMOTE_DIR }}
          
          cd '${{ env.REMOTE_DIR }}'
          git reset --hard
          git pull origin main
          
          cd '${{ env.COMPOSE_DIR }}'
          
          # Pull the latest image with embedded environment variables
          docker compose pull
          docker compose down || true
          docker compose up -d
          
          echo 'Deployment completed successfully!'
          
    - name: Cleanup
      if: always()
      run: |
        echo "üßπ Cleaning up GitHub Actions runner..."
        docker system prune -f || true
        docker image prune -a -f || true
        docker logout || true
